services:
  web-app:
    container_name: web-app
    build:
      context: .
      dockerfile: dev.Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      ENV_VARIABLE: ${ENV_VARIABLE}
      POSTGRES_HOST: db
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .env
    volumes:
      - .:/project
    restart: "no"
    ports:
      - "${WEB_PORT:-3000}:3000"
    networks:
      - my_network
    healthcheck:
      test: curl -f http://localhost:3000 || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s


  db:
    image: postgres
    restart: "no"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - my_network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
networks:
  my_network:
    name: my_network