@import "tailwindcss";

/* Global custom variables */
:root {
  --font-eyegrab: "tektur", sans-serif;
  --font-readme: "Inter", sans-serif;
  --font-family: var(--font-readme);
  /* if i use color-scheme, then i can not test with the theme toggle that i made.
   i have to change the firefox setting*/
  /* i can also use the toggle in devtools */
  /* added utility class to <html> and <body> instead*/
  color-scheme: light dark;
}

@theme {
  /* the main colors of the page should be primary and accent */
  --color-text-primary: light-dark(
    var(--color-gray-900),
    var(--color-gray-200)
  );
  --color-bg-primary: light-dark(var(--color-gray-100), var(--color-gray-900));

  --color-text-accent: light-dark(var(--color-gray-500), var(--color-gray-500));
  --color-bg-accent: light-dark(var(--color-gray-300), var(--color-gray-700));

  /* secondary is for components or text that needs to pop out to user */
  --color-text-secondary: light-dark(
    var(--color-gray-700),
    var(--color-gray-400)
  );
  --color-bg-secondary: light-dark(
    var(--color-blue-200),
    var(--color-blue-800)
  );

  --color-text-active: light-dark(var(--color-gray-700), var(--color-gray-400));
  --color-bg-active: light-dark(var(--color-blue-400), var(--color-blue-600));

  --color-text-hover: light-dark(var(--color-gray-600), var(--color-gray-300));
  --color-bg-hover: light-dark(
    var(--color-orange-300),
    var(--color-orange-300)
  );

  --color-text-focus: light-dark(var(--color-gray-800), var(--color-gray-500));
  --color-bg-focus: light-dark(var(--color-blue-500), var(--color-blue-500));

  --color-text-disabled: light-dark(
    var(--color-gray-400),
    var(--color-gray-600)
  );
  --color-bg-disabled: light-dark(var(--color-blue-500), var(--color-blue-500));

  --color-text-error: light-dark(var(--color-red-500), var(--color-red-500));
}

@custom-variant dark (&:where(.dark, .dark *));
@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *));

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: var(--font-eyegrab), sans-serif;
  color: var(--color-text-secondary);
}

.button {
  background-color: var(--color-bg-accent);
  color: var(--color-text-accent);
}

.button:hover {
  background-color: var(--color-bg-accent);
}

.button:active {
  background-color: var(--color-bg-active);
}

.button:disabled {
  background-color: var(--color-bg-disabled);
  color: var(--color-text-disabled);
}

.button:focus {
  outline: 2px solid var(--color-bg-accent);
  outline-offset: 2px;
}

@layer utilities {
  .bg-grid-pattern {
    background-image: url("data:image/svg+xml,%3Csvg width='40' height='40' viewBox='0 0 40 40' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' stroke='%23ccc' stroke-width='1'%3E%3Cpath d='M0 39.5h40M0 29.5h40M0 19.5h40M0 9.5h40M0 .5h40M39.5 0v40M29.5 0v40M19.5 0v40M9.5 0v40M.5 0v40'/%3E%3C/g%3E%3C/svg%3E");
  }
  .bg-dot-pattern {
    background-image: url("data:image/svg+xml,%3Csvg width='10' height='10' viewBox='0 0 10 10' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23ccc' fill-opacity='0.4'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/g%3E%3C/svg%3E");
  }
}
