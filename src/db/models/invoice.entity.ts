import "server-only";

import type { InvoiceStatus } from "@/features/invoices/invoice.types";
import type { CustomerId, InvoiceId } from "@/lib/definitions/brands";

/**
 * Domain model for Invoice.
 * Used for database and server logic.
 * All fields are strictly typed and immutable.
 */
export interface InvoiceEntity {
  readonly amount: number; // amount in cents
  readonly customerId: CustomerId; // branded type
  readonly date: string; // date in ISO format (YYYY-MM-DD)
  readonly id: InvoiceId; // branded type
  readonly sensitiveData: string; // sensitive data for internal use
  readonly status: InvoiceStatus; // status of the invoice (pending, paid)
}

/**
 * Domain model for creating a new invoice.
 * All fields are strictly typed and immutable.
 * @exclude `id` as it is generated by the database.
 */
export interface CreateInvoiceEntity {
  readonly amount: number; // amount in cents
  readonly customerId: CustomerId; // branded type
  readonly date: string; // date in ISO format (YYYY-MM-DD)
  readonly sensitiveData: string; // sensitive data for internal use
  readonly status: InvoiceStatus; // status of the invoice (pending, paid)
}
