/**
 * @file Invoice Data Transfer Objects (DTOs)
 * @description Defines the structure for invoice data used for one-way data transfer
 * across application boundaries, such as:
 *  - UI --> SERVER (e.g., form submissions or API requests)
 *  - SERVER --> UI (e.g., API responses)
 *  - SERVER --> EXTERNAL API (e.g., third-party integrations)
 *
 * Note: DTOs typically do not go directly to the database.
 *       They are mapped to domain entities or persistence models first.
 */

import type { InvoiceStatus } from "@/features/invoices/invoice.types";

/**
 * Data Transfer Object for an invoice.
 * Uses PLAIN types only - for API communication.
 */
export interface InvoiceDto {
  readonly id: string; // Plain string
  readonly amount: number; // cents
  readonly customerId: string; // Plain string
  readonly date: string;
  readonly sensitiveData: string;
  readonly status: InvoiceStatus;
}

/**
 * Data Transfer Object (DTO) for creating a new invoice.
 * Used in API requests to create an invoice.
 * All fields are required except for `id`, which is generated by the database.
 * @exclude `id` as it is generated by the database.
 */
export type InvoiceFormDto = Omit<InvoiceDto, "id">;
