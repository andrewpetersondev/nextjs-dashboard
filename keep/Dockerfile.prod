# Global variables
FROM node:24-slim AS base

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
ENV NODE_ENV=production
ENV PNPM_STORE_DIR="/pnpm/store"
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && corepack enable \
    && corepack prepare pnpm@latest --activate

RUN pnpm config set store-dir "$PNPM_STORE_DIR"

WORKDIR /app

# Stage 1: Install dependencies
FROM base AS deps
WORKDIR /app
COPY --chown=node:node ../package.json pnpm-lock.yaml ./
COPY --chown=node:node entrypoint-production.sh /app/entrypoint-production.sh
RUN chmod +x /app/entrypoint-production.sh
RUN --mount=type=cache,id=pnpm,target=/pnpm/store \
    pnpm install --frozen-lockfile --prod

# Stage 2: Build the application
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/entrypoint-production.sh ./entrypoint-production.sh
COPY --chown=node:node .. .
RUN chmod +x /app/entrypoint-production.sh
RUN pnpm build

# Stage 3: Production Server
FROM base AS runner
WORKDIR /app
ENV NODE_ENV=production
USER node
COPY --from=builder --chown=node:node /app/.next ./.next
COPY --from=builder --chown=node:node /app/public ./public
COPY --from=builder --chown=node:node /app/.next/standalone ./
COPY --from=builder --chown=node:node /app/.next/static ./.next/static
EXPOSE 3000
CMD ["node", "server.js"]
